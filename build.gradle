plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
}

group = 'no.uio'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

ext {
    springBootVersion = '3.3.0'
    springDocVersion = '2.5.0'
    jacksonVersion = '2.17.1'
    lombokVersion = '1.18.32'
    logbackVersion = '1.5.6'
    sl4jVersion = '2.0.13'
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    // Spring Boot
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-mustache:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
//    implementation("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}")
    // Jackson
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    // DevTools
    runtimeOnly("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
    // Swagger
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}")
    // Lombok
    implementation("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    // Logger
    implementation("ch.qos.logback:logback-classic:${logbackVersion}")
    implementation("ch.qos.logback:logback-core:${logbackVersion}")
    implementation("org.slf4j:slf4j-api:${sl4jVersion}")
    implementation("org.slf4j:slf4j-simple:${sl4jVersion}")
    // Commons
    implementation('org.apache.commons:commons-text:1.12.0')
    compileOnly("jakarta.servlet:jakarta.servlet-api:6.1.0-M2")
}

test {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(17)
}